
version: 2
jobs:

  # build:
  #   working_directory: /app
  #   docker:
  #     - image: continuumio/miniconda3
  #   steps:
  #     - checkout
  #     # - restore_cache:
  #     #     key: deps9-{{ .Branch }}-{{ checksum "environment.yml" }}
  #     - run:
  #         name: Install dependencies
  #         command: conda env create -f environment.yml
  #     # - run:
  #     #     name: "Update conda"
  #     #     command: conda env update -f environment.yml
  #     # - run:
  #     #     command: |
  #     #       conda env list | grep anaconda-docker >/dev/null
  #     #       if [[ $? != 0 ]]; then
  #     #           conda env create -f environment.yml
  #     #       fi
  #     # - save_cache:
  #     #     key: deps9-{{ .Branch }}-{{ checksum "environment.yml" }}
  #     #     paths:
  #     #       - "/opt/conda"
  #     - run:
  #         name: Run unit tests
  #         command: conda run -n anaconda-docker python -m unittest discover -v
  #     - run:
  #         name: Remove environment
  #         command: conda remove --name anaconda-docker --all --yes


  build:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: "create python virtual env v1"
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install --upgrade pip
      - run:
          name: "create python virtual env v2"
          command: |
            sudo pip3 install virtualenv
            sudo virtualenv -p $(which python3) ~venvpy3
            source ~venvpy3/bin/activate
            sudo pip install -r requirements.txt   
            sudo pip install --upgrade pip
      - run:
          name: "build vagrant kvm libvirt"
          command: |
            sudo pip3 install virtualenv
            sudo virtualenv -p $(which python3) ~venvpy3
            source ~venvpy3/bin/activate
            pip install -r requirements.txt
            sudo make deploy-libvirt
            sudo make deploy-vagrant
            sudo make deploy-boxes               

# workflows:
#   commit-parallel-workflow:
#     jobs:
#       - build
#       - build-vagrant-libvirt

    # jobs:
    #     - build
    #     - build-vagrant-libvirt