# Python CircleCI 2.0 configuration file
#
# https://circleci.com/docs/2.0/hello-world-windows/#example-configuration-file
#
version: 2.1

# orbs:
#   win: circleci/windows@2.2.0

jobs:
  build:
    executor:
      name: win/default
    steps: # multiple shells in the same job
      - checkout
      - run:
          command: conda config --set always_yes yes --set changeps1 no
          shell: cmd.exe # use Command
      - run:
          command: conda update -q conda
          shell: cmd.exe # use Command
      - run:
          command: conda info -a
          shell: cmd.exe # use Command
      - run:
          command: python --version
          shell: cmd.exe # use Command
      - run:
          command: conda env create -n venv-basic-anomaly-detection python=3.7  -f conda_environment.yml
          shell: cmd.exe # use Command
      - run:
          command: conda activate venv-basic-anomaly-detection
          shell: cmd.exe # use Command
      - run:
          # command: python -m pytest test_nb.py
          command: pytest test_nb.py
          shell: cmd.exe # use Command
      # - run:
      #     command: echo 'This is powershell executor'
      #     shell: powershell.exe # use Powershell
      # - run: dotnet tool install --global PowerShell # install the latest version of Powershell Core with the dotnet cli and use it in a job’s successive steps
      # - run: pwsh ./listDirs.ps1
      # - run:
      #     command: choco install osquery --params='/InstallService'
      #     shell: powershell.exe # use Powershell
      # - run:
      #     command: Start-service osqueryd
      #     shell: powershell.exe # use Powershell
      # - run:
      #     command: Get-Service | Where-Object {$_.name -eq “osqueryd”}
      #     shell: powershell.exe # use Powershell
      # - run:
      #     command: osqueryd --flagfile=C:\ProgramData\osquery\osquery.flags --config_path=C:\ProgramData\osquery\osquery.conf
      #     shell: powershell.exe # use Powershell
      # - run: $config | Out-File -FilePath C:\Program Data\osquery\osquery.flags
      # - run: Start-service osqueryd
      # - run: Get-Service | Where-Object {$_.name -eq “osqueryd”}
      # - run: osqueryd --flagfile=C:\ProgramData\osquery\osquery.flags --config_path=C:\ProgramData\osquery\osquery.conf
